{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Recipes from '../components/Recipes';\nimport fetch from 'isomorphic-fetch';\n\nfunction Index(props) {\n  return __jsx(Container, {\n    maxWidth: \"sm\"\n  }, __jsx(Box, {\n    my: 4\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h1\",\n    gutterBottom: true\n  }, __jsx(Recipes, {\n    recipes: props.recipes\n  }))));\n}\n\nIndex.getInitialProps = function _callee(_ref) {\n  var req, baseURL, res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req;\n          baseURL = req ? \"\".concat(req.protocol, \"://\").concat(req.get(\"Host\")) : \"\";\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(baseURL, \"/api/recipes\")));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          _context.t0 = _context.sent;\n          return _context.abrupt(\"return\", {\n            recipes: _context.t0\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/ubuntu/recipesharer/src/pages/index.js"],"names":["React","Container","Typography","Box","Recipes","fetch","Index","props","recipes","getInitialProps","req","baseURL","protocol","get","res","json"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAEE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC;AAApB,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAT,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY;AAApD,KACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,KAAK,CAACC;AAAxB,IADF,CADF,CADF,CAFF;AAUD;;AAEDF,KAAK,CAACG,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,QAASA,GAAT;AAClBC,UAAAA,OADkB,GACRD,GAAG,aAAMA,GAAG,CAACE,QAAV,gBAAwBF,GAAG,CAACG,GAAJ,CAAQ,MAAR,CAAxB,IAA4C,EADvC;AAAA;AAAA,2CAEJR,KAAK,WAAIM,OAAJ,kBAFD;;AAAA;AAEhBG,UAAAA,GAFgB;AAAA;AAAA,2CAILA,GAAG,CAACC,IAAJ,EAJK;;AAAA;AAAA;AAAA;AAIpBP,YAAAA,OAJoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAQA,eAAeF,KAAf","sourcesContent":["import React from 'react'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Recipes from '../components/Recipes'\nimport fetch from 'isomorphic-fetch'\n\nfunction Index(props) {\n  return (\n\n    <Container maxWidth=\"sm\">\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          <Recipes recipes={props.recipes} />\n        </Typography>\n      </Box>\n    </Container>\n  )\n}\n\nIndex.getInitialProps = async ({ req }) => {\n  let baseURL = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\"\n  const res = await fetch(`${baseURL}/api/recipes`)\n  return {\n    recipes: await res.json()\n  }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}